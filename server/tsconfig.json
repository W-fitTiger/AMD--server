{
    "compilerOptions": {
      "resolveJsonModule": true,
   
      "target": "ESNext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
     
      "module": "ESNext" /* Specify what module code is generated. */,
      "rootDir": "src" /* Specify the root folder within your source files. */,
      "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
                                /* Specify the base directory to resolve non-relative module names. */
      "paths": {
        "@/*": ["./src/*"],
        "@midd/*": ["./src/middlewares/*"],
        
      } /* Specify a set of entries that re-map imports to additional lookup locations. */,
                         /* Only output d.ts files and not JavaScript files. */
      "sourceMap": true /* Create source map files for emitted JavaScript files. */,
      // "outFile": "./",                                  /* Specify a file that bundles all outputs into one JavaScript file. If `declaration` is true, also designates a file that bundles all .d.ts output. */
      "outDir": "dist" /* Specify an output folder for all emitted files. */,
      // "removeComments": true,                           /* Disable emitting comments. */
            /* Allow 'import x from y' when a module doesn't have a default export. */
      "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
      // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
      "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
      /* Type Checking */
      "strict": true /* Enable all strict type-checking options. */,
      // "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied `any` type.. */
                   /* Skip type checking .d.ts files that are included with TypeScript. */
      "skipLibCheck": true, /* Skip type checking all .d.ts files. */
  
    },
    "include":["./src"],
    
  }